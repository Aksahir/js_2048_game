{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(this, \"statusEnum\", {\n            idle: \"idle\",\n            playing: \"playing\",\n            win: \"win\",\n            lose: \"lose\"\n        });\n        this.initialState = initialState;\n        this.state = this.initialState.map(function(row) {\n            return row.slice();\n        });\n        this.status = this.statusEnum.idle;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status === this.statusEnum.playing) {\n                    var _this = this, _loop = function(column) {\n                        var valuesOfColumn = [];\n                        for(var row = 0; row < 4; row++)if (_this.state[row][column] !== 0) valuesOfColumn.push(_this.state[row][column]);\n                        for(var i = 0; i < valuesOfColumn.length; i++)if (valuesOfColumn[i] === valuesOfColumn[i + 1]) {\n                            valuesOfColumn[i] *= 2;\n                            valuesOfColumn[i + 1] = 0;\n                            _this.score += valuesOfColumn[i];\n                            isMoved = true;\n                        }\n                        var newColumn = valuesOfColumn.filter(function(value) {\n                            return value !== 0;\n                        });\n                        while(newColumn.length < 4)newColumn.push(0);\n                        for(var row1 = 0; row1 < 4; row1++)if (_this.state[row1][column] !== newColumn[row1]) {\n                            _this.state[row1][column] = newColumn[row1];\n                            isMoved = true;\n                        }\n                    };\n                    var isMoved = false;\n                    for(var column = 0; column < 4; column++)_loop(column);\n                    if (isMoved) {\n                        this.addTile();\n                        this.checkStatus();\n                    }\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status === this.statusEnum.playing) {\n                    var _this = this, _loop = function(column) {\n                        var valuesOfColumn = [];\n                        for(var row = 3; row >= 0; row--)if (_this.state[row][column] !== 0) valuesOfColumn.push(_this.state[row][column]);\n                        for(var i = 0; i < valuesOfColumn.length; i++)if (valuesOfColumn[i] === valuesOfColumn[i + 1]) {\n                            valuesOfColumn[i] *= 2;\n                            valuesOfColumn[i + 1] = 0;\n                            isMoved = true;\n                            _this.score += valuesOfColumn[i];\n                        }\n                        var newColumn = valuesOfColumn.filter(function(value) {\n                            return value !== 0;\n                        });\n                        while(newColumn.length < 4)newColumn.push(0);\n                        for(var row1 = 0; row1 < 4; row1++)if (_this.state[row1][column] !== newColumn[3 - row1]) {\n                            _this.state[row1][column] = newColumn[3 - row1];\n                            isMoved = true;\n                        }\n                    };\n                    var isMoved = false;\n                    for(var column = 0; column < 4; column++)_loop(column);\n                    if (isMoved) {\n                        this.addTile();\n                        this.checkStatus();\n                    }\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status === this.statusEnum.playing) {\n                    var _this = this, _loop = function(row) {\n                        var valuesOfRows = [];\n                        for(var column = 0; column < 4; column++)if (_this.state[row][column] !== 0) valuesOfRows.push(_this.state[row][column]);\n                        for(var i = 0; i < valuesOfRows.length; i++)if (valuesOfRows[i] === valuesOfRows[i + 1]) {\n                            valuesOfRows[i] *= 2;\n                            valuesOfRows[i + 1] = 0;\n                            isMoved = true;\n                            _this.score += valuesOfRows[i];\n                        }\n                        var newRow = valuesOfRows.filter(function(value) {\n                            return value !== 0;\n                        });\n                        while(newRow.length < 4)newRow.push(0);\n                        for(var column1 = 0; column1 < 4; column1++)if (_this.state[row][column1] !== newRow[column1]) {\n                            _this.state[row][column1] = newRow[column1];\n                            isMoved = true;\n                        }\n                    };\n                    var isMoved = false;\n                    for(var row = 0; row < 4; row++)_loop(row);\n                    if (isMoved) {\n                        this.addTile();\n                        this.checkStatus();\n                    }\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status === this.statusEnum.playing) {\n                    var _this = this, _loop = function(row) {\n                        var valuesOfRows = [];\n                        for(var column = 3; column >= 0; column--)if (_this.state[row][column] !== 0) valuesOfRows.push(_this.state[row][column]);\n                        for(var i = 0; i < valuesOfRows.length; i++)if (valuesOfRows[i] === valuesOfRows[i + 1]) {\n                            valuesOfRows[i] *= 2;\n                            valuesOfRows[i + 1] = 0;\n                            isMoved = true;\n                            _this.score += valuesOfRows[i];\n                        }\n                        var newRow = valuesOfRows.filter(function(value) {\n                            return value !== 0;\n                        });\n                        while(newRow.length < 4)newRow.push(0);\n                        for(var column1 = 0; column1 < 4; column1++)if (_this.state[row][column1] !== newRow[3 - column1]) {\n                            _this.state[row][column1] = newRow[3 - column1];\n                            isMoved = true;\n                        }\n                    };\n                    var isMoved = false;\n                    for(var row = 0; row < 4; row++)_loop(row);\n                    if (isMoved) {\n                        this.addTile();\n                        this.checkStatus();\n                    }\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = this.statusEnum.playing;\n                this.addTile();\n                this.addTile();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.status = this.statusEnum.idle;\n                this.state = this.initialState.map(function(row) {\n                    return row.slice();\n                });\n                this.score = 0;\n            // this.getState();\n            // console.log(this.state);\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"addTile\",\n            value: function addTile() {\n                var emptyTiles = [];\n                for(var row = 0; row < 4; row++){\n                    for(var column = 0; column < 4; column++)if (this.state[row][column] === 0) emptyTiles.push([\n                        row,\n                        column\n                    ]);\n                }\n                if (emptyTiles.length > 0) {\n                    var _emptyTiles_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyTiles[Math.floor(Math.random() * emptyTiles.length)], 2), randomRow = _emptyTiles_Math_floor[0], randomColumn = _emptyTiles_Math_floor[1];\n                    this.state[randomRow][randomColumn] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"checkStatus\",\n            value: function checkStatus() {\n                var hasMoves = false;\n                var hasEmptyTiles = false;\n                for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++){\n                    if (this.state[row][column] === 2048) {\n                        this.status = this.statusEnum.win;\n                        return;\n                    }\n                    if (this.state[row][column] === 0) hasEmptyTiles = true;\n                    if (row < 3 && this.state[row][column] === this.state[row + 1][column] || column < 3 && this.state[row][column] === this.state[row][column + 1]) hasMoves = true;\n                }\n                if (!hasEmptyTiles && !hasMoves) this.status = this.statusEnum.lose;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$field = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.textContent === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n    } else if ($197cd56b15c33885$var$startButton.textContent === \"Restart\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$startButton.classList.add(\"start\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n    }\n    $197cd56b15c33885$var$updateField();\n    $197cd56b15c33885$var$updateScore();\n});\nfunction $197cd56b15c33885$var$updateScore() {\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$updateMessage() {\n    if ($197cd56b15c33885$var$game.getStatus() === $197cd56b15c33885$var$game.statusEnum.win) $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === $197cd56b15c33885$var$game.statusEnum.lose) $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$updateField() {\n    $197cd56b15c33885$var$field.innerHTML = \"\";\n    var state = $197cd56b15c33885$var$game.getState();\n    for(var row = 0; row < state.length; row++){\n        var tr = document.createElement(\"tr\");\n        for(var column = 0; column < state[row].length; column++){\n            var cell = document.createElement(\"td\");\n            var cellValue = state[row][column];\n            cell.textContent = cellValue !== 0 ? cellValue : \"\";\n            cell.classList.add(\"field-cell\");\n            if (cellValue !== 0) cell.classList.add(\"field-cell--\".concat(cellValue));\n            tr.appendChild(cell);\n        }\n        $197cd56b15c33885$var$field.appendChild(tr);\n    }\n}\nfunction $197cd56b15c33885$var$keyPress() {\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handlePress);\n}\nfunction $197cd56b15c33885$var$handlePress(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            break;\n    }\n    $197cd56b15c33885$var$updateField();\n    $197cd56b15c33885$var$updateScore();\n    $197cd56b15c33885$var$updateMessage();\n}\n$197cd56b15c33885$var$keyPress();\n\n})();\n//# sourceMappingURL=index.1a3ae9c3.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\n\nconst startButton = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst field = document.querySelector('.game-field');\nconst score = document.querySelector('.game-score');\n\nstartButton.addEventListener('click', () => {\n  if (startButton.textContent === 'Start') {\n    game.start();\n    messageStart.classList.add('hidden');\n    startButton.classList.remove('start');\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n  } else if (startButton.textContent === 'Restart') {\n    game.restart();\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    startButton.textContent = 'Start';\n    startButton.classList.add('start');\n    startButton.classList.remove('restart');\n    messageStart.classList.remove('hidden');\n  }\n  updateField();\n  updateScore();\n});\n\nfunction updateScore() {\n  score.textContent = game.getScore();\n}\n\nfunction updateMessage() {\n  if (game.getStatus() === game.statusEnum.win) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === game.statusEnum.lose) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction updateField() {\n  field.innerHTML = '';\n\n  const state = game.getState();\n\n  for (let row = 0; row < state.length; row++) {\n    const tr = document.createElement('tr');\n\n    for (let column = 0; column < state[row].length; column++) {\n      const cell = document.createElement('td');\n\n      const cellValue = state[row][column];\n\n      cell.textContent = cellValue !== 0 ? cellValue : '';\n      cell.classList.add('field-cell');\n\n      if (cellValue !== 0) {\n        cell.classList.add(`field-cell--${cellValue}`);\n      }\n      tr.appendChild(cell);\n    }\n    field.appendChild(tr);\n  }\n}\n\nfunction keyPress() {\n  document.addEventListener('keydown', handlePress);\n}\n\nfunction handlePress(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    default:\n      break;\n  }\n  updateField();\n  updateScore();\n  updateMessage();\n}\nkeyPress();\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  statusEnum = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.state = this.initialState.map((row) => row.slice());\n\n    this.status = this.statusEnum.idle;\n    this.score = 0;\n  }\n\n  moveUp() {\n    if (this.status === this.statusEnum.playing) {\n      let isMoved = false;\n\n      for (let column = 0; column < 4; column++) {\n        const valuesOfColumn = [];\n\n        for (let row = 0; row < 4; row++) {\n          if (this.state[row][column] !== 0) {\n            valuesOfColumn.push(this.state[row][column]);\n          }\n        }\n\n        for (let i = 0; i < valuesOfColumn.length; i++) {\n          if (valuesOfColumn[i] === valuesOfColumn[i + 1]) {\n            valuesOfColumn[i] *= 2;\n            valuesOfColumn[i + 1] = 0;\n            this.score += valuesOfColumn[i];\n            isMoved = true;\n          }\n        }\n\n        const newColumn = valuesOfColumn.filter((value) => value !== 0);\n\n        while (newColumn.length < 4) {\n          newColumn.push(0);\n        }\n\n        for (let row = 0; row < 4; row++) {\n          if (this.state[row][column] !== newColumn[row]) {\n            this.state[row][column] = newColumn[row];\n            isMoved = true;\n          }\n        }\n      }\n\n      if (isMoved) {\n        this.addTile();\n        this.checkStatus();\n      }\n    }\n  }\n  moveDown() {\n    if (this.status === this.statusEnum.playing) {\n      let isMoved = false;\n\n      for (let column = 0; column < 4; column++) {\n        const valuesOfColumn = [];\n\n        for (let row = 3; row >= 0; row--) {\n          if (this.state[row][column] !== 0) {\n            valuesOfColumn.push(this.state[row][column]);\n          }\n        }\n\n        for (let i = 0; i < valuesOfColumn.length; i++) {\n          if (valuesOfColumn[i] === valuesOfColumn[i + 1]) {\n            valuesOfColumn[i] *= 2;\n            valuesOfColumn[i + 1] = 0;\n            isMoved = true;\n            this.score += valuesOfColumn[i];\n          }\n        }\n\n        const newColumn = valuesOfColumn.filter((value) => value !== 0);\n\n        while (newColumn.length < 4) {\n          newColumn.push(0);\n        }\n\n        for (let row = 0; row < 4; row++) {\n          if (this.state[row][column] !== newColumn[3 - row]) {\n            this.state[row][column] = newColumn[3 - row];\n            isMoved = true;\n          }\n        }\n      }\n\n      if (isMoved) {\n        this.addTile();\n        this.checkStatus();\n      }\n    }\n  }\n  moveLeft() {\n    if (this.status === this.statusEnum.playing) {\n      let isMoved = false;\n\n      for (let row = 0; row < 4; row++) {\n        const valuesOfRows = [];\n\n        for (let column = 0; column < 4; column++) {\n          if (this.state[row][column] !== 0) {\n            valuesOfRows.push(this.state[row][column]);\n          }\n        }\n\n        for (let i = 0; i < valuesOfRows.length; i++) {\n          if (valuesOfRows[i] === valuesOfRows[i + 1]) {\n            valuesOfRows[i] *= 2;\n            valuesOfRows[i + 1] = 0;\n            isMoved = true;\n            this.score += valuesOfRows[i];\n          }\n        }\n\n        const newRow = valuesOfRows.filter((value) => value !== 0);\n\n        while (newRow.length < 4) {\n          newRow.push(0);\n        }\n\n        for (let column = 0; column < 4; column++) {\n          if (this.state[row][column] !== newRow[column]) {\n            this.state[row][column] = newRow[column];\n            isMoved = true;\n          }\n        }\n      }\n\n      if (isMoved) {\n        this.addTile();\n        this.checkStatus();\n      }\n    }\n  }\n  moveRight() {\n    if (this.status === this.statusEnum.playing) {\n      let isMoved = false;\n\n      for (let row = 0; row < 4; row++) {\n        const valuesOfRows = [];\n\n        for (let column = 3; column >= 0; column--) {\n          if (this.state[row][column] !== 0) {\n            valuesOfRows.push(this.state[row][column]);\n          }\n        }\n\n        for (let i = 0; i < valuesOfRows.length; i++) {\n          if (valuesOfRows[i] === valuesOfRows[i + 1]) {\n            valuesOfRows[i] *= 2;\n            valuesOfRows[i + 1] = 0;\n            isMoved = true;\n            this.score += valuesOfRows[i];\n          }\n        }\n\n        const newRow = valuesOfRows.filter((value) => value !== 0);\n\n        while (newRow.length < 4) {\n          newRow.push(0);\n        }\n\n        for (let column = 0; column < 4; column++) {\n          if (this.state[row][column] !== newRow[3 - column]) {\n            this.state[row][column] = newRow[3 - column];\n            isMoved = true;\n          }\n        }\n      }\n\n      if (isMoved) {\n        this.addTile();\n        this.checkStatus();\n      }\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = this.statusEnum.playing;\n    this.addTile();\n    this.addTile();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.status = this.statusEnum.idle;\n    this.state = this.initialState.map((row) => row.slice());\n    this.score = 0;\n    // this.getState();\n    // console.log(this.state);\n  }\n\n  // Add your own methods here\n\n  addTile() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (this.state[row][column] === 0) {\n          emptyTiles.push([row, column]);\n        }\n      }\n    }\n\n    if (emptyTiles.length > 0) {\n      const [randomRow, randomColumn] =\n        emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n      this.state[randomRow][randomColumn] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  checkStatus() {\n    let hasMoves = false;\n    let hasEmptyTiles = false;\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (this.state[row][column] === 2048) {\n          this.status = this.statusEnum.win;\n\n          return;\n        }\n\n        if (this.state[row][column] === 0) {\n          hasEmptyTiles = true;\n        }\n\n        if (\n          (row < 3 &&\n            this.state[row][column] === this.state[row + 1][column]) ||\n          (column < 3 &&\n            this.state[row][column] === this.state[row][column + 1])\n        ) {\n          hasMoves = true;\n        }\n      }\n    }\n\n    if (!hasEmptyTiles && !hasMoves) {\n      this.status = this.statusEnum.lose;\n    }\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$game","protoProps","Game","key","value","initialState","arguments","instance","Constructor","TypeError","idle","playing","win","lose","Object","defineProperty","enumerable","configurable","writable","obj","state","map","row","slice","status","statusEnum","score","_this","isMoved","column","_loop","valuesOfColumn","push","newColumn","filter","row1","addTile","checkStatus","valuesOfRows","newRow","column1","emptyTiles","_emptyTiles_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","n","prototype","toString","constructor","name","from","test","randomRow","randomColumn","hasMoves","hasEmptyTiles","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$field","$197cd56b15c33885$var$score","$197cd56b15c33885$var$updateScore","textContent","getScore","$197cd56b15c33885$var$updateField","innerHTML","getState","tr","createElement","cell","cellValue","classList","add","concat","appendChild","addEventListener","start","remove","restart","e","moveUp","moveDown","moveLeft","moveRight","getStatus"],"version":3,"file":"index.1a3ae9c3.js.map"}